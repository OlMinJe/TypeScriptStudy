/**
 * < 선언 합침 >
 * 동일한 이름으로 선언된 인터페이스는 오류가 발생하지 않고 서로 합쳐진다.
 * 반면에 'type'은 동일한 별칭을 사용하는 경우 오류가 발생한다.
 *
 * 단, 동일한 프로퍼티를 다른 타입으로 중복 선언할 때는 오류가 발생하며, 이러한 것을 '충돌'이라고 표현한다.
 * 중복인 프로퍼티를 선언하고 싶다면 꼭 동일한 타입(서브 타입 X)으로 선언해야 한다.
 */

interface Person {
  name: string;
}
interface Person {
  age: number;
}
const person: Person = {
  name: "",
  age: 25,
};

/**
 * < 모둘 보강 >
 * 라이브러리의 타입이 부실한 경우, 타입을 좀 더 추가해주고 정확하게 만들어주는 작업이다.
 * 주로, 기존에 있는 인터페이스를 사용하는 객체에서 프로퍼티를 추가해야 할 때 사용한다.
 * (모듈을 보강할 때는, 인터페이스의 선언 합침을 이용하는 편이다.)
 */
interface Lib {
  a: number;
  b: number;
}
// 모듈 보강
interface Lib {
  c: string;
}
const lib = {
  a: 1,
  b: 2,
  c: "string",
};
